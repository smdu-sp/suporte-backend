// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Permissao {
  ADM
  TEC
  USR
}

model Usuario {
  id                String    @id @default(uuid())
  nome              String
  login             String    @unique
  email             String    @unique
  status            Int       @default(1)
  dev               Boolean   @default(false)
  avatar            String?   @db.Text

  ultimologin       DateTime  @default(now())
  criadoEm          DateTime  @default(now())
  atualizadoEm      DateTime  @default(now()) @updatedAt

  ordens            Ordem[]
  servicos          Servico[]
  usuario_sistema   UsuarioSistema[]
  unidade           Unidade?  @relation(fields: [unidade_id], references: [id])
  unidade_id        String?

  @@map("usuarios")
}

model UsuarioSistema {
  usuario_id    String
  sistema_id    String
  permissao     Permissao   @default(USR)

  usuario       Usuario     @relation(fields: [usuario_id], references: [id])
  sistema       Sistema     @relation(fields: [sistema_id], references: [id])

  @@id([usuario_id, sistema_id])
  @@map("usuario_sistema")
}

model Unidade {
  id     String  @id @default(uuid())
  nome   String  @unique
  sigla  String  @unique
  codigo String  @unique
  status Boolean @default(true)

  usuarios Usuario[]
  ordens   Ordem[]

  @@map("unidades")
}

model Ordem { //ordem de servi√ßo
  id               String       @id
  unidade_id       String
  unidade          Unidade      @relation(fields: [unidade_id], references: [id])
  andar            Int
  sala             String
  solicitante      Usuario      @relation(fields: [solicitante_id], references: [id])
  solicitante_id   String
  tratar_com       String?
  telefone         String       @default("")
  data_solicitacao DateTime     @default(now())
  status           Int          @default(1)
  prioridade       Int          @default(1)
  observacoes      String
  servicos         Servico[]
  sistema_id       String
  sistema          Sistema      @relation(fields: [sistema_id], references: [id])
  categoria_id     String
  categoria        Categoria    @relation(fields: [categoria_id], references: [id])
  subcategoria_id  String
  subcategoria     Subcategoria @relation(fields: [subcategoria_id], references: [id])

  @@map("ordens")
}

model Servico {
  id          String      @id @default(uuid())
  data_inicio DateTime    @default(now())
  data_fim    DateTime?
  descricao   String?
  materiais   Material[]
  suspensoes  Suspensao[]
  ordem       Ordem       @relation(fields: [ordem_id], references: [id])
  ordem_id    String
  avaliado_em DateTime?
  status      Int         @default(1)
  observacao  String?
  tecnicos    Usuario[]

  @@map("servicos")
}

model Suspensao {
  id         String    @id @default(uuid())
  servico_id String
  servico    Servico   @relation(fields: [servico_id], references: [id])
  motivo     String
  inicio     DateTime  @default(now())
  termino    DateTime?
  status     Boolean   @default(true)

  @@map("suspensoes")
}

model SugestaoMaterial {
  id   String @id @default(uuid())
  nome String @unique

  @@map("sugestao_materiais")
}

model Material {
  id         String @id @default(uuid())
  nome       String
  quantidade Float
  medida     String

  servico_id String
  servico    Servico @relation(fields: [servico_id], references: [id])

  @@map("materiais")
}

model Sistema {
  id                String @id @default(uuid())
  nome              String @unique
  padrao            Boolean @default(false)
  categorias        Categoria[]
  ordens            Ordem[]
  avisos            Aviso[]
  usuario_sistema   UsuarioSistema[]
  status            Boolean @default(true)

  @@map("sistema")
}

model Categoria {
  id            String  @id @default(uuid())
  nome          String  @unique
  sistema_id    String
  sistema       Sistema @relation(fields: [sistema_id], references: [id])
  subcategorias Subcategoria[]
  ordens        Ordem[]
  status        Boolean @default(true)

  @@map("categorias")
}

model Subcategoria {
  id           String @id @default(uuid())
  nome         String @unique
  categoria_id String
  categoria    Categoria @relation(fields: [categoria_id], references: [id])
  ordens       Ordem[]
  status       Boolean @default(true)

  @@map("subcategoria")
}

enum CorModalAviso {
  PRIMARY
  SUCCESS
  NEUTRAL
  WARNING
  DANGER
}

model Aviso {
  id          String @id @default(uuid())
  titulo      String
  mensagem    String
  cor         CorModalAviso @default(NEUTRAL)
  rota        String
  status      Boolean @default(false)
  sistema_id  String
  
  sistema     Sistema @relation(fields: [sistema_id], references: [id])

  @@map("aviso")
}
